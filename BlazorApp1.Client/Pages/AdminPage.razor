<!--page "/admin"-->
@using MyBlazorShopHosted.Libraries.Shared.Order
@using MyBlazorShopHosted.Libraries.Shared.ShoppingCart.Models
@inject NavigationManager Navigation
@rendermode InteractiveAuto
@attribute [Authorize(Roles = "Admin")]

<head>
    <style>
        .titleDesign {
            text-align: center;
        }

        .container {
            display: flex;
            justify-content: space-between;
            margin: 10px;
        }

        .left-panel,
        .right-panel {
            flex: 1;
            padding: 10px;
            border: 1px solid #ccc;
            box-sizing: border-box;
            max-height: 100%;
            overflow-y: auto;
        }

        .left-panel {
            max-width: 30%;
        }

        .right-panel {
            max-width: 65%;
        }

        .left-panel ul {
            list-style-type: none;
            padding: 0;
        }

            .left-panel ul li {
                margin-bottom: 5px;
            }

                .left-panel ul li a {
                    display: block;
                    padding: 5px;
                    color: #333;
                    text-decoration: none;
                    background-color: #f0f0f0;
                    border-radius: 5px;
                    transition: background-color 0.3s;
                }

                    .left-panel ul li a:hover {
                        background-color: #ccc;
                        cursor: pointer;
                    }

                    .left-panel ul li a:focus {
                        outline: none;
                    }

                    .left-panel ul li a:active {
                        background-color: #aaa;
                    }

    </style>
</head>

<h3 class="titleDesign">Se de seneste ordrer</h3>
<div class="container">
    <div class="left-panel">
        <h3>Ordrer</h3>
        <ul>
            @if (Orders != null)
            {
                @foreach (var order in Orders.OrderByDescending(o => o.id).Take(20).OrderBy(o => o.id))
                {
                    <li>
                        <a @onclick="() => SelectOrder(order)">@order.orderId</a>
                    </li>
                }
            }
        </ul>
    </div>

    <div class="right-panel">
        <h3>Ordre detaljer</h3>
        @if (SelectedOrder != null)
        {
            <div>
                <p><strong>Ordre id:</strong> @SelectedOrderId</p>
                @foreach (var item in SelectedOrder.Items)
                {
                    <p><strong>Item:</strong> @item.Product.Name</p>
                    <p><strong>Price:</strong> @item.TotalPrice</p>
                    <!-- Add more details as needed -->
                }
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public List<OrderModel> Orders { get; set; }

    private ShoppingCartModel SelectedOrder;
    private string SelectedOrderId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        
        await base.OnInitializedAsync();
    }

    private void SelectOrder(OrderModel order)
    {
        //SelectedOrder = order;
    }

}
